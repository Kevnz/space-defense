(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var globals={bullets:null,enemies:null,player:null},update=require("./game/update"),preload=require("./game/preload"),create=require("./game/create"),game=window.game=new Phaser.Game(800,600,Phaser.AUTO,"",{preload:preload,create:create,update:update});
//# sourceMappingURL=out.js.map

},{"./game/create":2,"./game/preload":3,"./game/update":4}],2:[function(require,module,exports){
"use strict";function resetBullet(e){e.kill()}function setupEnemy(e){e.anchor.x=.5,e.anchor.y=.5,e.animations.add("explode")}module.exports=function(){game.physics.startSystem(Phaser.Physics.ARCADE),this.spaceBG=this.add.tileSprite(0,0,800,600,"bg"),this.spaceBG.autoScroll(0,75);var e=window.ef=this.add.sprite(384,10,"atlas");e.frameName="bad-guy1.png",game.physics.enable(e,Phaser.Physics.ARCADE);var s=window.player=this.add.sprite(384,500,"ship");game.physics.enable(s,Phaser.Physics.ARCADE);var a=(window.cursors=this.input.keyboard.createCursorKeys(),window.bullets=this.add.group());a.enableBody=!0,a.physicsBodyType=Phaser.Physics.ARCADE,a.createMultiple(10,"bullets"),a.setAll("anchor.x",.5),a.setAll("anchor.y",1),a.setAll("outOfBoundsKill",!0),a.setAll("checkWorldBounds",!0),window.aliens=game.add.group(),aliens.enableBody=!0,aliens.physicsBodyType=Phaser.Physics.ARCADE,window.explosions=game.add.group(),explosions.createMultiple(30,"explode"),explosions.forEach(setupEnemy,this);var i=function(){var e=game.rnd.integerInRange(40,600),s=game.rnd.integerInRange(40,300),a=aliens.create(e,s,"enemy");a.anchor.setTo(.5,.5),a.body.moves=!1};game.time.events.repeat(2*Phaser.Timer.SECOND,25,i,this)};
//# sourceMappingURL=out.js.map

},{}],3:[function(require,module,exports){
"use strict";module.exports=function(){this.load.image("enemy","img/enemy-fighters/bad-guy1-a.png"),this.load.atlas("bullets","img/assets/bullets.png","img/assets/bullets.json"),this.load.image("blue_bullet","img/assets/blue-bullet.png"),this.load.image("bg","img/backgrounds/bg.png"),this.load.image("ship","img/space_ship_base.png"),this.load.atlas("atlas","img/enemy-fighters/enemy-fighters.png","img/enemy-fighters/enemy-fighters.json"),this.load.image("ship","img/space_ship_base.png"),this.load.spritesheet("explode","img/assets/explode.png",128,128)};
//# sourceMappingURL=out.js.map

},{}],4:[function(require,module,exports){
"use strict";function resetBullet(e){e.kill()}function collisionHandler(e,i){e.kill(),i.kill();var l=(i.body.x,i.body.y,explosions.getFirstExists(!1));l.reset(i.body.x,i.body.y),l.play("explode",30,!1,!0)}var bulletTime=0;module.exports=function(){function e(){if(game.time.now>l){var e=i.getFirstExists(!1);e&&(e.reset(player.x,player.y+16),e.body.velocity.y=-300,l=game.time.now+200)}if(game.time.now>o){var s=i.getFirstExists(!1);s&&(s.reset(player.x+26,player.y+16),s.body.velocity.y=-300,o=game.time.now+200)}}var i=window.bullets,l=0,o=0,s=window.cursors;s.up.isDown?s.up.shiftKey||player.y>350&&(player.y-=4):s.down.isDown&&(s.down.shiftKey||(player.y+=4)),s.left.isDown?player.x-=4:s.right.isDown&&(player.x+=4),this.input.keyboard.isDown(Phaser.Keyboard.SPACEBAR)&&e(),game.physics.arcade.overlap(i,ef,collisionHandler,null,this),game.physics.arcade.overlap(i,aliens,collisionHandler,null,this)};
//# sourceMappingURL=out.js.map

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
