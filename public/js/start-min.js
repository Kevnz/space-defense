(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var globals={bullets:null,enemies:null,player:null},update=require("./game/update"),preload=require("./game/preload"),create=require("./game/create"),game=window.game=new Phaser.Game(800,600,Phaser.AUTO,"",{preload:preload,create:create,update:update});
//# sourceMappingURL=out.js.map

},{"./game/create":2,"./game/preload":3,"./game/update":4}],2:[function(require,module,exports){
"use strict";function resetBullet(e){e.kill()}module.exports=function(){this.spaceBG=this.add.tileSprite(0,0,800,600,"bg"),this.spaceBG.autoScroll(0,75);var e=window.ef=this.add.sprite(384,10,"atlas");e.frameName="bad-guy1.png";var s=(window.player=this.add.sprite(384,500,"ship"),window.cursors=this.input.keyboard.createCursorKeys(),window.bullets=this.add.group());s.enableBody=!0,s.physicsBodyType=Phaser.Physics.ARCADE,s.createMultiple(10,"bullets"),s.setAll("anchor.x",.5),s.setAll("anchor.y",1),s.setAll("outOfBoundsKill",!0),s.setAll("checkWorldBounds",!0)};
//# sourceMappingURL=out.js.map

},{}],3:[function(require,module,exports){
"use strict";module.exports=function(){this.load.atlas("bullets","img/assets/bullets.png","img/assets/bullets.json"),this.load.image("bg","img/backgrounds/bg.png"),this.load.image("ship","img/space_ship_base.png"),this.load.atlas("atlas","img/enemy-fighters/enemy-fighters.png","img/enemy-fighters/enemy-fighters.json"),this.load.image("ship","img/space_ship_base.png")};
//# sourceMappingURL=out.js.map

},{}],4:[function(require,module,exports){
"use strict";function resetBullet(e){e.kill()}function collisionHandler(e,i){e.kill(),i.kill()}var bulletTime=0;module.exports=function(){function e(){if(t.time.now>l){var e=i.getFirstExists(!1);e&&(e.reset(player.x,player.y+16),e.body.velocity.y=-300,l=t.time.now+200)}if(t.time.now>o){var r=i.getFirstExists(!1);r&&(r.reset(player.x+26,player.y+16),r.body.velocity.y=-300,o=t.time.now+200)}}var i=window.bullets,l=0,o=0,t=window.game,r=window.cursors;r.up.isDown?r.up.shiftKey||player.y>350&&(player.y-=4):r.down.isDown&&(r.down.shiftKey||(player.y+=4)),r.left.isDown?player.x-=4:r.right.isDown&&(player.x+=4),this.input.keyboard.isDown(Phaser.Keyboard.SPACEBAR)&&e(),t.physics.arcade.overlap(i,ef,collisionHandler,null,this)};
//# sourceMappingURL=out.js.map

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
